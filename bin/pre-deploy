#!/bin/bash

# This pre-deploy script is largely copied from the
# prepare_environment.bash script from Pombola.

set -e

cd "$(dirname $BASH_SOURCE)"/..

# virtualenv >= 1.7 changed the default behaviour to --no-site-packages,
# which causes problems on wheezy where gdal is hard to build.
VIRTUALENV_VERSION="$(virtualenv --version)"
VIRTUALENV_ARGS=""
if [ "$(echo -e '1.7\n'$VIRTUALENV_VERSION | sort -V | head -1)" = '1.7' ]; then
    VIRTUALENV_ARGS="--system-site-packages"
fi

VIRTUALENV_DIR='../venv'
VIRTUALENV_ACTIVATE="$VIRTUALENV_DIR/bin/activate"

# create the virtual environment, install/update required packages
if [ ! -f "$VIRTUALENV_ACTIVATE" ]
then
    virtualenv $VIRTUALENV_ARGS $VIRTUALENV_DIR
fi

source $VIRTUALENV_ACTIVATE

# Upgrade pip to a secure version
# curl -L -s https://raw.github.com/pypa/pip/master/contrib/get-pip.py | python
# Revert to the line above once we can get a newer setuptools from Debian, or
# pip ceases to need such a recent one.
curl -L -s https://raw.github.com/mysociety/commonlib/master/bin/get_pip.bash | bash

pip install -r requirements.txt

# Make sure that symlinks to the system python-opencv is present:
for FILE in cv.py cv2.so
do
    ln -sf /usr/lib/python2.7/dist-packages/$FILE \
        "$VIRTUALENV_DIR/lib/python2.7/site-packages/$FILE"
done

# make sure that there is no old code (the .py files may have been git deleted)
find . -name '*.pyc' -delete

# Compile the allauth messages files - see
# https://github.com/pennersr/django-allauth/issues/1032
if [ -d "$VIRTUALENV_DIR" ]
then
    find "$VIRTUALENV_DIR/lib/python2.7/site-packages/allauth/locale/" \
        -name django.po \
        -execdir msgfmt django.po -o django.mo \;
fi

# get the database up to speed
./manage.py migrate --noinput

# Install gems in order to compile the CSS
mkdir -p "../gems"
export GEM_HOME="$(cd ../gems && pwd -P)"
export PATH="$GEM_HOME/bin:$PATH"
if (sass --version | grep '3\.2\.19') > /dev/null
then
    echo sass is already installed at the correct version
else
    echo Installing sass...
    gem install --no-ri --no-rdoc sass -v 3.2.19
    echo done.
fi

# Generate the files of translated strings for Javascript to use
./manage.py compilejsi18n

# gather all the static files in one place
./manage.py collectstatic --noinput

# Compile all translations from .po files into .mo files
./manage.py compilemessages
